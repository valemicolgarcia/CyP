EJERCICIO 2

. Existen N personas que deben fotocopiar un documento cada una. Resolver cada ítem 
usando monitores: 
a) Implemente una solución suponiendo que existe una única fotocopiadora compartida  por todas las personas, y las mismas la deben usar de a una persona a la vez, sin  importar el orden. Existe una función Fotocopiar() que simula el uso de la fotocopiadora.  Sólo se deben usar los procesos que representan a las Personas (y los monitores que sean necesarios). 
b) Modifique la solución de (a) para el caso en que se deba respetar el orden de llegada. 
c) Modifique la solución de (b) para el caso en que se deba dar prioridad de acuerdo a la  edad de cada persona (cuando la fotocopiadora está libre la debe usar la persona de  mayor edad entre las que estén esperando para usarla). 
d) Modifique la solución de (a) para el caso en que se deba respetar estrictamente el orden  dado por el identificador del proceso (la persona X no puede usar la fotocopiadora  hasta que no haya terminado de usarla la persona X-1). 
e) Modifique la solución de (b) para el caso en que además haya un Empleado que le indica  a cada persona cuando debe usar la fotocopiadora. 
f) Modificar la solución (e) para el caso en que sean 10 fotocopiadoras. El empleado le  indica a la persona cuando puede usar una fotocopiadora, y cual debe usar.  


ANALISIS
- N personas para fotocopiar un doc cd una

INCISO A
- 1 fotocopiadora COMPARTIDA (hay que administrarle el acceso) --> una persona a la vez
- no importa el orden
- fotocopiar() --> simula el uso de la fotocopiadora
- los procesos representan a las personas

entonces:

- N personas esperan su turno
- N personas usan la focopiadora cuando esta libre
- 


SOLUCION

Process Persona [id: 0..N-1]{

}

Monitor Fotocopiadora{
    bool ocupada = false;
    cond espera; 
    Procedure Entrar(){
        if (ocupada)
            wait (espera);
        ocupada = true;
    }
    Procedure Salir(){
        ocupada = false;
        signal(espera); //despierta a la persona que esta esperando si es que hay
    }
}