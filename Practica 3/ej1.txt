CONSIDERACIONES PARA RESOLVER LOS EJERCICIOS: 
- Los monitores utilizan el protocolo signal and continue. 
- A una variable condition SÓLO pueden aplicársele las operaciones SIGNAL, SIGNALALL y WAIT. 
- NO puede utilizarse el wait con prioridades. 
- NO se puede utilizar ninguna operación que determine la cantidad de procesos  encolados en una variable condition o si está vacía. 
- La única forma de comunicar datos entre monitores o entre un proceso y un monitor  es por medio de invocaciones al procedimiento del monitor del cual se quieren  obtener (o enviar) los datos. 
- No existen variables globales. 
- En todos los ejercicios debe maximizarse la concurrencia. 
- En todos los ejercicios debe aprovecharse al máximo la característica de exclusión 
mutua que brindan los monitores. 
- Debe evitarse hacer busy waiting. 
- En todos los ejercicios el tiempo debe representarse con la función delay


EJERCICIO 1
1. Implementar el acceso a una base de datos de solo lectura que puede atender a lo sumo 5  consultas simultáneas. 


ANALISIS
- 5 consultas a la vez, de forma concurrente
- si hay 5 consultas en ejecucion, las demas deben esperar a que alguna finalice
- el monitor es la base de datos, los procesos son los clientes
1. si hay menos de 5 procesos consultando, el proceso entra
2. si hay 5 procesos en uso, el sig proceso debe esperar
3. cuando un proceso termina debe liberar y despertar al sig


SOLUCION

Monitor BaseDeDatos{
    int enUso = 0;
    cond Espera;

    Procedure Entrar(){
        if (enUso == 5){
            wait (Espera); //se duerme ya que hay 5 consultas a la bd, esperando la bd
        }
        enUso++; //aumenta el contador si pudo entrar a la bd
    }

    Procedure Salir(){
        enUso --; //decrementa el contador para luberar un lugar
        Signal(Espera); //despierta a la persona que esta esperando la bd
    }
}

Process Persona[id:0..N-1]{
    BaseDeDatos.entrar();
    //lectura
    BaseDeDatos.salir();
}